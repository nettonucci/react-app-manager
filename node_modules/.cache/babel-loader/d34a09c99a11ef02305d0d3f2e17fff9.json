{"ast":null,"code":"var _jsxFileName = \"/Users/nettonucci/Documents/www/react-manager-app/src/views/Dashboard/components/StatusServer/StatusServer.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport Spinner from 'react-activity/lib/Spinner';\nimport 'react-activity/lib/Spinner/Spinner.css';\nimport palette from 'theme/palette';\nimport { Card, CardContent, Grid, Typography, Avatar, IconButton } from '@material-ui/core';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport api from '../../../../server/api';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    backgroundColor: theme.palette.success.main\n  },\n  root2: {\n    height: '100%',\n    backgroundColor: theme.palette.error.main\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700,\n    color: '#fff'\n  },\n  status: {\n    color: '#fff'\n  },\n  avatar: {\n    backgroundColor: theme.palette.success.main,\n    color: theme.palette.white,\n    height: 56,\n    width: 56\n  },\n  avatar2: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.white,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  difference: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  differenceIcon: {\n    color: theme.palette.success.dark\n  },\n  differenceValue: {\n    color: theme.palette.success.dark,\n    marginRight: theme.spacing(1)\n  },\n  load: {\n    marginLeft: '40%',\n    marginTop: 10\n  }\n}));\n\nconst StatusServer = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const [status, setStatus] = useState('Off-Line');\n  const [load, setload] = useState(false);\n  useEffect(() => {\n    statusServer();\n  }, []);\n\n  const statusServer = () => {\n    setload(true);\n    api.get('statusservidor').then(response => {\n      if (response.status === 200) {\n        setStatus('On-Line');\n      }\n    });\n    setload(false); // setTimeout(() => {\n    //   setload(false);\n    // }, 300);\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, status == 'Off-Line' ? /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root2, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), load ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.load,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    animating: true,\n    color: palette.secondary.main,\n    size: 40,\n    speed: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, \"STATUS DO SERVIDOR\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.status,\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  }, status)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ThumbDownIcon, {\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.difference,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: statusServer,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RefreshIcon, {\n    style: {\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }))))) : /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }), load ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.load,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    animating: true,\n    color: palette.secondary.main,\n    size: 40,\n    speed: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, \"STATUS DO SERVIDOR\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.status,\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 19\n    }\n  }, status)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ThumbUpIcon, {\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.difference,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: statusServer,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RefreshIcon, {\n    style: {\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  }))))));\n};\n\nStatusServer.propTypes = {\n  className: PropTypes.string\n};\nexport default StatusServer;","map":{"version":3,"sources":["/Users/nettonucci/Documents/www/react-manager-app/src/views/Dashboard/components/StatusServer/StatusServer.js"],"names":["React","useState","useEffect","clsx","PropTypes","makeStyles","Spinner","palette","Card","CardContent","Grid","Typography","Avatar","IconButton","ThumbUpIcon","ThumbDownIcon","RefreshIcon","api","useStyles","theme","root","height","backgroundColor","success","main","root2","error","content","alignItems","display","title","fontWeight","color","status","avatar","white","width","avatar2","icon","difference","marginTop","spacing","differenceIcon","dark","differenceValue","marginRight","load","marginLeft","StatusServer","props","className","rest","setStatus","setload","statusServer","get","then","response","classes","secondary","propTypes","string"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport Spinner from 'react-activity/lib/Spinner';\nimport 'react-activity/lib/Spinner/Spinner.css';\nimport palette from 'theme/palette';\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  Avatar,\n  IconButton\n} from '@material-ui/core';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport api from '../../../../server/api';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    backgroundColor: theme.palette.success.main\n  },\n  root2: {\n    height: '100%',\n    backgroundColor: theme.palette.error.main\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700,\n    color: '#fff'\n  },\n  status: {\n    color: '#fff'\n  },\n  avatar: {\n    backgroundColor: theme.palette.success.main,\n    color: theme.palette.white,\n    height: 56,\n    width: 56\n  },\n  avatar2: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.white,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  difference: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  differenceIcon: {\n    color: theme.palette.success.dark\n  },\n  differenceValue: {\n    color: theme.palette.success.dark,\n    marginRight: theme.spacing(1)\n  },\n  load: {\n    marginLeft: '40%',\n    marginTop: 10\n  }\n}));\n\nconst StatusServer = props => {\n  const { className, ...rest } = props;\n  const [status, setStatus] = useState('Off-Line');\n  const [load, setload] = useState(false);\n\n  useEffect(() => {\n    statusServer();\n  }, []);\n\n  const statusServer = () => {\n    setload(true);\n    api.get('statusservidor').then(response => {\n      if (response.status === 200) {\n        setStatus('On-Line');\n      }\n    });\n    setload(false);\n    // setTimeout(() => {\n    //   setload(false);\n    // }, 300);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      {status == 'Off-Line' ? (\n        <Card\n          {...rest}\n          className={clsx(classes.root2, className)}\n        >\n          {load ? (\n            <div className={classes.load}>\n              <Spinner\n                animating\n                color={palette.secondary.main}\n                size={40}\n                speed={1}\n              />\n            </div>\n          ) : (\n            <CardContent>\n              <Grid\n                container\n                justify=\"space-between\"\n              >\n                <Grid item>\n                  <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    STATUS DO SERVIDOR\n                  </Typography>\n                  <Typography\n                    className={classes.status}\n                    variant=\"h3\"\n                  >\n                    {status}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Avatar className={classes.avatar2}>\n                    <ThumbDownIcon className={classes.icon} />\n                  </Avatar>\n                </Grid>\n              </Grid>\n              <div className={classes.difference}>\n                <IconButton\n                  onClick={statusServer}\n                  size=\"small\"\n                >\n                  <RefreshIcon style={{ color: '#fff' }} />\n                </IconButton>\n              </div>\n            </CardContent>\n          )}\n        </Card>\n      ) : (\n        <Card\n          {...rest}\n          className={clsx(classes.root, className)}\n        >\n          {load ? (\n            <div className={classes.load}>\n              <Spinner\n                animating\n                color={palette.secondary.main}\n                size={40}\n                speed={1}\n              />\n            </div>\n          ) : (\n            <CardContent>\n              <Grid\n                container\n                justify=\"space-between\"\n              >\n                <Grid item>\n                  <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    STATUS DO SERVIDOR\n                  </Typography>\n                  <Typography\n                    className={classes.status}\n                    variant=\"h3\"\n                  >\n                    {status}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Avatar className={classes.avatar}>\n                    <ThumbUpIcon className={classes.icon} />\n                  </Avatar>\n                </Grid>\n              </Grid>\n              <div className={classes.difference}>\n                <IconButton\n                  onClick={statusServer}\n                  size=\"small\"\n                >\n                  <RefreshIcon style={{ color: '#fff' }} />\n                </IconButton>\n              </div>\n            </CardContent>\n          )}\n        </Card>\n      )}\n    </>\n  );\n};\n\nStatusServer.propTypes = {\n  className: PropTypes.string\n};\n\nexport default StatusServer;\n"]},"metadata":{},"sourceType":"module"}