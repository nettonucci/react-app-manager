{"ast":null,"code":"var _jsxFileName = \"/Users/nettonucci/Documents/www/react-manager-app/src/views/Dashboard/components/QuantidadePorBase/QuantidadePorBase.js\";\n\n/* eslint-disable quotes */\n\n/* eslint-disable no-undef */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport { makeStyles } from '@material-ui/styles';\nimport Spinner from 'react-activity/lib/Spinner';\nimport 'react-activity/lib/Spinner/Spinner.css';\nimport palette from 'theme/palette';\nimport api from '../../../../server/api';\nimport { Card, IconButton, CardHeader, CardContent, CardActions, Divider, Button } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { options } from './chart';\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chartContainer: {\n    height: 400,\n    position: 'relative'\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  load: {\n    alignSelf: 'center',\n    marginLeft: '50%',\n    marginTop: 10\n  }\n}));\n\nconst QuantidadePorBase = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const [assis, setAssis] = useState(0);\n  const [giga, setGiga] = useState(0);\n  const [rr, setRr] = useState(0);\n  const [tupa, setTupa] = useState(0);\n  const [load, setload] = useState(false);\n  useEffect(() => {\n    base();\n  }, []);\n\n  const base = () => {\n    setload(true);\n    api.get('clientesbase').then(response => {\n      const base = response.data;\n      setRr(base[0].RR);\n      setGiga(base[0].Giga_TV);\n      setAssis(base[0].TVC_Assis);\n      setTupa(base[0].TVC_Tupã);\n    });\n    setTimeout(() => {\n      setload(false);\n    }, 1000); // setload(false)\n  };\n\n  const data = {\n    labels: ['TVC Assis', 'R&R', 'Giga TV', 'TVC Tupã'],\n    datasets: [{\n      label: 'Clientes',\n      backgroundColor: palette.secondary.main,\n      data: [assis, rr, giga, tupa]\n    }]\n  };\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      onClick: base,\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(RefreshIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    })),\n    title: \"Quantidade por base\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), load ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.load,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    animating: true,\n    color: palette.secondary.main,\n    size: 40,\n    speed: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chartContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }));\n};\n\nQuantidadePorBase.propTypes = {\n  className: PropTypes.string\n};\nexport default QuantidadePorBase;","map":{"version":3,"sources":["/Users/nettonucci/Documents/www/react-manager-app/src/views/Dashboard/components/QuantidadePorBase/QuantidadePorBase.js"],"names":["React","useEffect","useState","clsx","PropTypes","Bar","Doughnut","makeStyles","Spinner","palette","api","Card","IconButton","CardHeader","CardContent","CardActions","Divider","Button","ArrowDropDownIcon","ArrowRightIcon","RefreshIcon","options","useStyles","root","chartContainer","height","position","actions","justifyContent","load","alignSelf","marginLeft","marginTop","QuantidadePorBase","props","className","rest","assis","setAssis","giga","setGiga","rr","setRr","tupa","setTupa","setload","base","get","then","response","data","RR","Giga_TV","TVC_Assis","TVC_Tupã","setTimeout","labels","datasets","label","backgroundColor","secondary","main","classes","propTypes","string"],"mappings":"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","sourcesContent":["/* eslint-disable quotes */\n/* eslint-disable no-undef */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport { makeStyles } from '@material-ui/styles';\nimport Spinner from 'react-activity/lib/Spinner';\nimport 'react-activity/lib/Spinner/Spinner.css';\nimport palette from 'theme/palette';\nimport api from '../../../../server/api';\nimport {\n  Card,\n  IconButton,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Button\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { options } from './chart';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chartContainer: {\n    height: 400,\n    position: 'relative'\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  load: {\n    alignSelf: 'center',\n    marginLeft: '50%',\n    marginTop: 10\n  }\n}));\n\nconst QuantidadePorBase = props => {\n  const { className, ...rest } = props;\n  const [assis, setAssis] = useState(0);\n  const [giga, setGiga] = useState(0);\n  const [rr, setRr] = useState(0);\n  const [tupa, setTupa] = useState(0);\n  const [load, setload] = useState(false);\n\n  useEffect(() => {\n    base();\n  }, []);\n\n  const base = () => {\n    setload(true);\n    api.get('clientesbase').then(response => {\n      const base = response.data;\n      setRr(base[0].RR);\n      setGiga(base[0].Giga_TV);\n      setAssis(base[0].TVC_Assis);\n      setTupa(base[0].TVC_Tupã);\n    });\n    setTimeout(() => {\n      setload(false);\n    }, 1000);\n    // setload(false)\n  };\n\n  const data = {\n    labels: ['TVC Assis', 'R&R', 'Giga TV', 'TVC Tupã'],\n    datasets: [\n      {\n        label: 'Clientes',\n        backgroundColor: palette.secondary.main,\n        data: [assis, rr, giga, tupa]\n      }\n    ]\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={\n          <IconButton\n            onClick={base}\n            size=\"small\"\n          >\n            <RefreshIcon />\n          </IconButton>\n        }\n        title=\"Quantidade por base\"\n      />\n\n      <Divider />\n      {load ? (\n        <div className={classes.load}>\n          <Spinner\n            animating\n            color={palette.secondary.main}\n            size={40}\n            speed={1}\n          />\n        </div>\n      ) : (\n        <CardContent>\n          <div className={classes.chartContainer}>\n            <Bar\n              data={data}\n              options={options}\n            />\n          </div>\n        </CardContent>\n      )}\n\n      <Divider />\n    </Card>\n  );\n};\n\nQuantidadePorBase.propTypes = {\n  className: PropTypes.string\n};\n\nexport default QuantidadePorBase;\n"]},"metadata":{},"sourceType":"module"}