{"ast":null,"code":"var _jsxFileName = \"/Users/nettonucci/Documents/www/react-manager-app/src/views/Dashboard/components/UsersByDevice/UsersByDevice.js\";\n\n/* eslint-disable no-undef */\n\n/* eslint-disable quotes */\n\n/* eslint-disable no-console */\n\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport clsx from 'clsx';\nimport api from '../../../../server/api';\nimport Spinner from 'react-activity/lib/Spinner';\nimport 'react-activity/lib/Spinner/Spinner.css';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { getPlataform } from '../../../../store/plataformReducer';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport palette from 'theme/palette';\nimport { Card, CardHeader, CardContent, IconButton, Divider, Typography } from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport AndroidIcon from '@material-ui/icons/Android';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  chartContainer: {\n    position: 'relative',\n    height: '300px'\n  },\n  stats: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  device: {\n    textAlign: 'center',\n    padding: theme.spacing(1)\n  },\n  deviceIcon: {\n    color: theme.palette.icon\n  },\n  load: {\n    marginLeft: '45%',\n    marginTop: 10\n  }\n}));\n\nconst UsersByDevice = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const dispatch = useDispatch();\n  const [ios, setIos] = useState(0);\n  const [android, setAndroid] = useState(0);\n  const [load, setload] = useState(false);\n  useEffect(() => {\n    plataform(); // getPlataform()\n  }, []); // const plataform = useSelector(state => state.plataform);\n  // console.log('Get ->', plataform);\n\n  const plataform = () => {\n    setload(true);\n    process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';\n    api.get('porcentagemplataforma').then(response => {\n      const plataforma = response.data;\n      setIos(plataforma[1].Porcentagem);\n      setAndroid(plataforma[0].Porcentagem);\n    });\n    setTimeout(() => {\n      setload(false);\n    }, 1000);\n  };\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const data = {\n    datasets: [{\n      data: [android, ios],\n      backgroundColor: [theme.palette.secondary.main, theme.palette.warning.main],\n      borderWidth: 8,\n      borderColor: theme.palette.white,\n      hoverBorderColor: theme.palette.white\n    }],\n    labels: ['Android', 'IOS']\n  };\n  const options = {\n    legend: {\n      display: false\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.white,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary\n    }\n  };\n  const devices = [{\n    title: 'Android',\n    value: android,\n    icon: /*#__PURE__*/React.createElement(AndroidIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }),\n    color: theme.palette.secondary.main\n  }, {\n    title: 'IOS',\n    value: ios,\n    icon: /*#__PURE__*/React.createElement(PhoneIphoneIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }),\n    color: theme.palette.warning.main\n  }];\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      onClick: plataform,\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(RefreshIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    })),\n    title: \"Porcentagem de aparelhos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), load ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.load,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    animating: true,\n    color: palette.secondary.main,\n    size: 40,\n    speed: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chartContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Doughnut, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, devices.map(device => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.device,\n    key: device.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.deviceIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, device.icon), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, device.title), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      color: device.color\n    },\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, device.value, \"%\"))))));\n};\n\nUsersByDevice.propTypes = {\n  className: PropTypes.string\n};\nexport default UsersByDevice;","map":{"version":3,"sources":["/Users/nettonucci/Documents/www/react-manager-app/src/views/Dashboard/components/UsersByDevice/UsersByDevice.js"],"names":["React","useEffect","useState","Doughnut","clsx","api","Spinner","PropTypes","useSelector","useDispatch","getPlataform","makeStyles","useTheme","palette","Card","CardHeader","CardContent","IconButton","Divider","Typography","LaptopMacIcon","PhoneIphoneIcon","RefreshIcon","AndroidIcon","useStyles","theme","root","height","chartContainer","position","stats","marginTop","spacing","display","justifyContent","device","textAlign","padding","deviceIcon","color","icon","load","marginLeft","UsersByDevice","props","className","rest","dispatch","ios","setIos","android","setAndroid","setload","plataform","process","env","NODE_TLS_REJECT_UNAUTHORIZED","get","then","response","plataforma","data","Porcentagem","setTimeout","classes","datasets","backgroundColor","secondary","main","warning","borderWidth","borderColor","white","hoverBorderColor","labels","options","legend","responsive","maintainAspectRatio","animation","cutoutPercentage","layout","tooltips","enabled","mode","intersect","divider","titleFontColor","text","primary","bodyFontColor","footerFontColor","devices","title","value","map","propTypes","string"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable quotes */\n/* eslint-disable no-console */\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport clsx from 'clsx';\nimport api from '../../../../server/api';\nimport Spinner from 'react-activity/lib/Spinner';\nimport 'react-activity/lib/Spinner/Spinner.css';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { getPlataform } from '../../../../store/plataformReducer';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport palette from 'theme/palette';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  IconButton,\n  Divider,\n  Typography\n} from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport AndroidIcon from '@material-ui/icons/Android';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  chartContainer: {\n    position: 'relative',\n    height: '300px'\n  },\n  stats: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  device: {\n    textAlign: 'center',\n    padding: theme.spacing(1)\n  },\n  deviceIcon: {\n    color: theme.palette.icon\n  },\n  load: {\n    marginLeft: '45%',\n    marginTop: 10\n  }\n}));\n\nconst UsersByDevice = props => {\n  const { className, ...rest } = props;\n  const dispatch = useDispatch();\n  const [ios, setIos] = useState(0);\n  const [android, setAndroid] = useState(0);\n  const [load, setload] = useState(false);\n\n  useEffect(() => {\n    plataform();\n    // getPlataform()\n  }, []);\n\n  // const plataform = useSelector(state => state.plataform);\n  // console.log('Get ->', plataform);\n\n  const plataform = () => {\n    setload(true);\n    process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';\n    api.get('porcentagemplataforma').then(response => {\n      const plataforma = response.data;\n      setIos(plataforma[1].Porcentagem);\n      setAndroid(plataforma[0].Porcentagem);\n    });\n    setTimeout(() => {\n      setload(false);\n    }, 1000);\n  };\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        data: [android, ios],\n        backgroundColor: [\n          theme.palette.secondary.main,\n          theme.palette.warning.main\n        ],\n        borderWidth: 8,\n        borderColor: theme.palette.white,\n        hoverBorderColor: theme.palette.white\n      }\n    ],\n    labels: ['Android', 'IOS']\n  };\n\n  const options = {\n    legend: {\n      display: false\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    layout: { padding: 0 },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.white,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary\n    }\n  };\n\n  const devices = [\n    {\n      title: 'Android',\n      value: android,\n      icon: <AndroidIcon />,\n      color: theme.palette.secondary.main\n    },\n    {\n      title: 'IOS',\n      value: ios,\n      icon: <PhoneIphoneIcon />,\n      color: theme.palette.warning.main\n    }\n  ];\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={\n          <IconButton\n            onClick={plataform}\n            size=\"small\"\n          >\n            <RefreshIcon />\n          </IconButton>\n        }\n        title=\"Porcentagem de aparelhos\"\n      />\n      <Divider />\n      {load ? (\n        <div className={classes.load}>\n          <Spinner\n            animating\n            color={palette.secondary.main}\n            size={40}\n            speed={1}\n          />\n        </div>\n      ) : (\n        <CardContent>\n          <div className={classes.chartContainer}>\n            <Doughnut\n              data={data}\n              options={options}\n            />\n          </div>\n          <div className={classes.stats}>\n            {devices.map(device => (\n              <div\n                className={classes.device}\n                key={device.title}\n              >\n                <span className={classes.deviceIcon}>{device.icon}</span>\n                <Typography variant=\"body1\">{device.title}</Typography>\n                <Typography\n                  style={{ color: device.color }}\n                  variant=\"h2\"\n                >\n                  {device.value}%\n                </Typography>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      )}\n    </Card>\n  );\n};\n\nUsersByDevice.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UsersByDevice;\n"]},"metadata":{},"sourceType":"module"}