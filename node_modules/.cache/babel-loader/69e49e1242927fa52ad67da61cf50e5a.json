{"ast":null,"code":"var _jsxFileName = \"/Users/nettonucci/Documents/www/react-manager-app/src/views/Dashboard/components/MaisAcessadas/MaisAcessadas.js\";\n\n/* eslint-disable quotes */\n\n/* eslint-disable no-undef */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-console */\n\n/* eslint-disable quotes */\nimport React, { useEffect, useState } from 'react';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\nimport api from '../../../../server/api';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Bar, Doughnut, Pie, HorizontalBar } from 'react-chartjs-2';\nimport { makeStyles } from '@material-ui/styles';\nimport Spinner from 'react-activity/lib/Spinner';\nimport 'react-activity/lib/Spinner/Spinner.css';\nimport palette from 'theme/palette';\nimport { Card, IconButton, CardHeader, CardContent, CardActions, Divider, Button } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { options } from './chart';\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chartContainer: {\n    height: 800,\n    position: 'relative'\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  load: {\n    alignSelf: 'center',\n    marginLeft: '50%',\n    marginTop: 10\n  }\n}));\n\nconst MaisAcessadas = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const [load, setload] = useState(false);\n  useEffect(() => {\n    am4core.useTheme(am4themes_animated); // Themes end\n    // Create chart instance\n\n    let chart = am4core.create('chartdiv', am4charts.XYChart3D);\n    api.get('acessocount').then(response => {\n      const dados = response.data;\n      chart.data = dados;\n    });\n    /* Chart code */\n    // Themes begin\n    // Create axes\n\n    let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = 'acesso';\n    categoryAxis.renderer.labels.template.visible = false;\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.title.text = 'Logs';\n    valueAxis.title.fontWeight = 'bold'; // Create series\n\n    let series = chart.series.push(new am4charts.ColumnSeries3D());\n    series.dataFields.valueY = 'QTD';\n    series.dataFields.categoryX = 'acesso';\n    series.name = 'QTD';\n    series.tooltipText = '{categoryX}: [bold]{valueY}[/]';\n    series.columns.template.fillOpacity = 0.8;\n    let columnTemplate = series.columns.template;\n    columnTemplate.strokeWidth = 2;\n    columnTemplate.strokeOpacity = 1;\n    columnTemplate.stroke = am4core.color('#FFFFFF');\n    columnTemplate.adapter.add('fill', function (fill, target) {\n      return chart.colors.getIndex(target.dataItem.index);\n    });\n    columnTemplate.adapter.add('stroke', function (stroke, target) {\n      return chart.colors.getIndex(target.dataItem.index);\n    });\n    chart.cursor = new am4charts.XYCursor();\n    chart.cursor.lineX.strokeOpacity = 0;\n    chart.cursor.lineY.strokeOpacity = 0;\n    setload(false);\n  }, [load]);\n\n  const logs = () => {\n    setload(true);\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      onClick: logs,\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(RefreshIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    })),\n    title: \"Logs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }), load ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.load,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    animating: true,\n    color: palette.secondary.main,\n    size: 40,\n    speed: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"chartdiv\",\n    style: {\n      width: '100%',\n      height: '500px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }));\n};\n\nMaisAcessadas.propTypes = {\n  className: PropTypes.string\n};\nexport default MaisAcessadas;","map":{"version":3,"sources":["/Users/nettonucci/Documents/www/react-manager-app/src/views/Dashboard/components/MaisAcessadas/MaisAcessadas.js"],"names":["React","useEffect","useState","am4core","am4charts","am4themes_animated","api","clsx","PropTypes","Bar","Doughnut","Pie","HorizontalBar","makeStyles","Spinner","palette","Card","IconButton","CardHeader","CardContent","CardActions","Divider","Button","ArrowDropDownIcon","ArrowRightIcon","RefreshIcon","options","useStyles","root","chartContainer","height","position","actions","justifyContent","load","alignSelf","marginLeft","marginTop","MaisAcessadas","props","className","rest","setload","useTheme","chart","create","XYChart3D","get","then","response","dados","data","categoryAxis","xAxes","push","CategoryAxis","dataFields","category","renderer","labels","template","visible","valueAxis","yAxes","ValueAxis","title","text","fontWeight","series","ColumnSeries3D","valueY","categoryX","name","tooltipText","columns","fillOpacity","columnTemplate","strokeWidth","strokeOpacity","stroke","color","adapter","add","fill","target","colors","getIndex","dataItem","index","cursor","XYCursor","lineX","lineY","logs","classes","secondary","main","width","propTypes","string"],"mappings":"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","sourcesContent":["/* eslint-disable quotes */\n/* eslint-disable no-undef */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\n/* eslint-disable quotes */\nimport React, { useEffect, useState } from 'react';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\nimport api from '../../../../server/api';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Bar, Doughnut, Pie, HorizontalBar } from 'react-chartjs-2';\nimport { makeStyles } from '@material-ui/styles';\nimport Spinner from 'react-activity/lib/Spinner';\nimport 'react-activity/lib/Spinner/Spinner.css';\nimport palette from 'theme/palette';\nimport {\n  Card,\n  IconButton,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Divider,\n  Button\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { options } from './chart';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chartContainer: {\n    height: 800,\n    position: 'relative'\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  load: {\n    alignSelf: 'center',\n    marginLeft: '50%',\n    marginTop: 10\n  }\n}));\n\nconst MaisAcessadas = props => {\n  const { className, ...rest } = props;\n  const [load, setload] = useState(false);\n\n  useEffect(() => {\n    am4core.useTheme(am4themes_animated);\n    // Themes end\n\n    // Create chart instance\n    let chart = am4core.create('chartdiv', am4charts.XYChart3D);\n\n    api.get('acessocount').then(response => {\n      const dados = response.data;\n      chart.data = dados;\n    });\n    /* Chart code */\n    // Themes begin\n\n    // Create axes\n    let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = 'acesso';\n    categoryAxis.renderer.labels.template.visible = false;\n\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.title.text = 'Logs';\n    valueAxis.title.fontWeight = 'bold';\n\n    // Create series\n    let series = chart.series.push(new am4charts.ColumnSeries3D());\n    series.dataFields.valueY = 'QTD';\n    series.dataFields.categoryX = 'acesso';\n    series.name = 'QTD';\n    series.tooltipText = '{categoryX}: [bold]{valueY}[/]';\n    series.columns.template.fillOpacity = 0.8;\n\n    let columnTemplate = series.columns.template;\n    columnTemplate.strokeWidth = 2;\n    columnTemplate.strokeOpacity = 1;\n    columnTemplate.stroke = am4core.color('#FFFFFF');\n\n    columnTemplate.adapter.add('fill', function(fill, target) {\n      return chart.colors.getIndex(target.dataItem.index);\n    });\n\n    columnTemplate.adapter.add('stroke', function(stroke, target) {\n      return chart.colors.getIndex(target.dataItem.index);\n    });\n\n    chart.cursor = new am4charts.XYCursor();\n    chart.cursor.lineX.strokeOpacity = 0;\n    chart.cursor.lineY.strokeOpacity = 0;\n    setload(false);\n  }, [load]);\n\n  const logs = () => {\n    setload(true);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={\n          <IconButton\n            onClick={logs}\n            size=\"small\"\n          >\n            <RefreshIcon />\n          </IconButton>\n        }\n        title=\"Logs\"\n      />\n\n      <Divider />\n      {load ? (\n        <div className={classes.load}>\n          <Spinner\n            animating\n            color={palette.secondary.main}\n            size={40}\n            speed={1}\n          />\n        </div>\n      ) : (\n        <CardContent>\n          <div\n            id=\"chartdiv\"\n            style={{ width: '100%', height: '500px' }}\n          />\n        </CardContent>\n      )}\n\n      <Divider />\n    </Card>\n  );\n};\n\nMaisAcessadas.propTypes = {\n  className: PropTypes.string\n};\n\nexport default MaisAcessadas;\n"]},"metadata":{},"sourceType":"module"}