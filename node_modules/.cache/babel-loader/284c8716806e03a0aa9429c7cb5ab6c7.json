{"ast":null,"code":"var _jsxFileName = \"/Users/nettonucci/Documents/www/react-manager-app/src/views/Dashboard/components/TotalProfit/TotalProfit.js\";\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography, Avatar, IconButton } from '@material-ui/core';\nimport StarRateIcon from '@material-ui/icons/StarRate';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport api from '../../../../server/api';\nimport Spinner from 'react-activity/lib/Spinner';\nimport 'react-activity/lib/Spinner/Spinner.css';\nimport palette from 'theme/palette';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.warning.main,\n    color: theme.palette.white,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  load: {\n    marginLeft: '40%',\n    marginTop: 10\n  },\n  difference: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  }\n}));\n\nconst TotalProfit = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const [user, setUsers] = useState(0);\n  const [load, setload] = useState(false);\n  useEffect(() => {\n    countAval();\n  }, []);\n\n  const countAval = () => {\n    setload(true);\n    api.get('contadorclientesaval').then(response => {\n      setUsers(response.data);\n    });\n    setTimeout(() => {\n      setload(false);\n    }, 1000);\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }), load ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.load,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    animating: true,\n    color: palette.secondary.main,\n    size: 40,\n    speed: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"inherit\",\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, \"AVALIA\\xC7\\xD5ES\"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, user)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(StarRateIcon, {\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.difference,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: countAval,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RefreshIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  })))));\n};\n\nTotalProfit.propTypes = {\n  className: PropTypes.string\n};\nexport default TotalProfit;","map":{"version":3,"sources":["/Users/nettonucci/Documents/www/react-manager-app/src/views/Dashboard/components/TotalProfit/TotalProfit.js"],"names":["React","useState","useEffect","clsx","PropTypes","makeStyles","Card","CardContent","Grid","Typography","Avatar","IconButton","StarRateIcon","RefreshIcon","api","Spinner","palette","useStyles","theme","root","height","content","alignItems","display","title","fontWeight","avatar","backgroundColor","warning","main","color","white","width","icon","load","marginLeft","marginTop","difference","spacing","TotalProfit","props","className","rest","user","setUsers","setload","countAval","get","then","response","data","setTimeout","classes","secondary","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  Avatar,\n  IconButton\n} from '@material-ui/core';\nimport StarRateIcon from '@material-ui/icons/StarRate';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport api from '../../../../server/api';\nimport Spinner from 'react-activity/lib/Spinner';\nimport 'react-activity/lib/Spinner/Spinner.css';\nimport palette from 'theme/palette';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%'\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  title: {\n    fontWeight: 700\n  },\n  avatar: {\n    backgroundColor: theme.palette.warning.main,\n    color: theme.palette.white,\n    height: 56,\n    width: 56\n  },\n  icon: {\n    height: 32,\n    width: 32\n  },\n  load: {\n    marginLeft: '40%',\n    marginTop: 10\n  },\n  difference: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  }\n}));\n\nconst TotalProfit = props => {\n  const { className, ...rest } = props;\n  const [user, setUsers] = useState(0);\n  const [load, setload] = useState(false);\n\n  useEffect(() => {\n    countAval();\n  }, []);\n\n  const countAval = () => {\n    setload(true);\n    api.get('contadorclientesaval').then(response => {\n      setUsers(response.data);\n    });\n    setTimeout(() => {\n      setload(false);\n    }, 1000);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {load ? (\n        <div className={classes.load}>\n          <Spinner\n            animating\n            color={palette.secondary.main}\n            size={40}\n            speed={1}\n          />\n        </div>\n      ) : (\n        <CardContent>\n          <Grid\n            container\n            justify=\"space-between\"\n          >\n            <Grid item>\n              <Typography\n                className={classes.title}\n                color=\"inherit\"\n                gutterBottom\n                variant=\"body2\"\n              >\n                AVALIAÇÕES\n              </Typography>\n              <Typography\n                color=\"inherit\"\n                variant=\"h3\"\n              >\n                {user}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Avatar className={classes.avatar}>\n                <StarRateIcon className={classes.icon} />\n              </Avatar>\n            </Grid>\n          </Grid>\n          <div className={classes.difference}>\n            <IconButton\n              onClick={countAval}\n              size=\"small\"\n            >\n              <RefreshIcon />\n            </IconButton>\n          </div>\n        </CardContent>\n      )}\n    </Card>\n  );\n};\n\nTotalProfit.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalProfit;\n"]},"metadata":{},"sourceType":"module"}