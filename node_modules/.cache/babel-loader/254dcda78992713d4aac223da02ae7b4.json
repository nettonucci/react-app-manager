{"ast":null,"code":"var _jsxFileName = \"/Users/nettonucci/Documents/www/react-manager-app/src/views/Banners/components/BannersToolbar/BannersToolbar.js\";\n\n/* eslint-disable quotes */\nimport React, { useEffect, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport api from '../../../../server/api';\nimport { Alert } from '@material-ui/lab';\nimport { useDispatch } from 'react-redux';\nimport Paper from '@material-ui/core/Paper';\nconst thumbsContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: 16\n};\nconst thumb = {\n  display: 'inline-flex',\n  borderRadius: 2,\n  border: '1px solid #eaeaea',\n  marginBottom: 8,\n  marginRight: 8,\n  marginLeft: 8,\n  width: 400,\n  height: 300,\n  padding: 4,\n  boxSizing: 'border-box'\n};\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden'\n};\nconst img = {\n  display: 'block',\n  width: 400,\n  height: 300,\n  resizeMode: 'cover'\n};\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  banner: {\n    height: '100',\n    width: '100',\n    backgroundColor: '#f1f'\n  }\n}));\n\nconst BannersToolbar = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const [open, setOpen] = React.useState(false);\n  const [alert, setalert] = React.useState(false);\n  const [title, settitle] = React.useState('');\n  const [subtitle, setsubtitle] = React.useState('');\n  const [desc, setdesc] = React.useState('');\n  const [link, setlink] = React.useState('');\n  const [files, setFiles] = useState([]);\n  const dispatch = useDispatch();\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: 'image/*',\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n  const thumbs = files.map(file => /*#__PURE__*/React.createElement(\"div\", {\n    key: file.name,\n    style: thumb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: thumbInner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: file.preview,\n    style: img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }))));\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setFiles([]);\n    setalert(false);\n  };\n\n  const handleDeleteFoto = () => {};\n\n  const handleAddBanner = () => {\n    console.log(\"Banner ->\", files);\n    console.log(\"Title ->\", title);\n    console.log(\"Sub Title ->\", subtitle);\n    console.log(\"Desc ->\", desc);\n    console.log(\"Link ->\", link); // if (video_url !== '' && video_title !== '') {\n    //   const URL = video_url;\n    //   const title = video_title;\n    //   api\n    //     .post('videos', {\n    //       URL,\n    //       title\n    //     })\n    //     .then(response => {\n    //       handleClose();\n    //       setvideo_url('');\n    //       setvideo_title('');\n    //       setalert(false);\n    //       const list = 'new';\n    //       dispatch(getVideos(list));\n    //     });\n    // } else {\n    //   setalert(true);\n    // }\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.spacer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: handleClickOpen,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, \"ADD BANNER\")), /*#__PURE__*/React.createElement(Dialog, {\n    \"aria-labelledby\": \"form-dialog-title\",\n    fullWidth: true,\n    maxWidth: \"md\",\n    onClose: handleClose,\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, alert && /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, \"Todos os campos precisam estar preenchidos!\"), /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, \"Adicionar Banner\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true // m={3}\n    ,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 12,\n    md: 6,\n    xl: 6,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, \"Adicione um novo Banner no app, ele ficara localizado na tela principal do App.\"), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    fullWidth: true,\n    id: \"Title\",\n    label: \"Titulo*\",\n    margin: \"dense\",\n    onChange: event => settitle(event.target.value),\n    type: \"text\",\n    value: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    id: \"SubTitle\",\n    label: \"Sub Titulo\",\n    margin: \"dense\",\n    onChange: event => setsubtitle(event.target.value),\n    type: \"text\",\n    value: subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    id: \"Desc\",\n    label: \"Descri\\xE7\\xE3o\",\n    margin: \"dense\",\n    onChange: event => setdesc(event.target.value),\n    type: \"text\",\n    value: desc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    id: \"link\",\n    label: \"Link da promo\",\n    margin: \"dense\",\n    onChange: event => setlink(event.target.value),\n    type: \"text\",\n    value: link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 12,\n    md: 6,\n    xl: 6,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 15\n    }\n  }, \"Pr\\xE9via\"), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps({\n    className: 'dropzone'\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 23\n    }\n  }, \"Arraste aqui o Banner ou clique para escolher um!\"))), /*#__PURE__*/React.createElement(\"aside\", {\n    style: thumbsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 19\n    }\n  }, thumbs)))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }, \"Cancelar\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleAddBanner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, \"Adicionar\"))));\n};\n\nBannersToolbar.propTypes = {\n  className: PropTypes.string\n};\nexport default BannersToolbar;","map":{"version":3,"sources":["/Users/nettonucci/Documents/www/react-manager-app/src/views/Banners/components/BannersToolbar/BannersToolbar.js"],"names":["React","useEffect","useState","useDropzone","PropTypes","clsx","makeStyles","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Grid","api","Alert","useDispatch","Paper","thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","marginLeft","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","resizeMode","useStyles","theme","root","row","alignItems","spacing","spacer","flexGrow","importButton","exportButton","searchInput","banner","backgroundColor","BannersToolbar","props","className","rest","open","setOpen","alert","setalert","title","settitle","subtitle","setsubtitle","desc","setdesc","link","setlink","files","setFiles","dispatch","getRootProps","getInputProps","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","thumbs","name","forEach","revokeObjectURL","handleClickOpen","handleClose","handleDeleteFoto","handleAddBanner","console","log","classes","event","target","value","paper","propTypes","string"],"mappings":"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","sourcesContent":["/* eslint-disable quotes */\nimport React, { useEffect, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport api from '../../../../server/api';\nimport { Alert } from '@material-ui/lab';\nimport { useDispatch } from 'react-redux';\nimport Paper from '@material-ui/core/Paper';\n\nconst thumbsContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: 16\n};\n\nconst thumb = {\n  display: 'inline-flex',\n  borderRadius: 2,\n  border: '1px solid #eaeaea',\n  marginBottom: 8,\n  marginRight: 8,\n  marginLeft: 8,\n  width: 400,\n  height: 300,\n  padding: 4,\n  boxSizing: 'border-box'\n};\n\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden'\n};\n\nconst img = {\n  display: 'block',\n  width: 400,\n  height: 300,\n  resizeMode: 'cover'\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  spacer: {\n    flexGrow: 1\n  },\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  },\n  searchInput: {\n    marginRight: theme.spacing(1)\n  },\n  banner: {\n    height: '100',\n    width: '100',\n    backgroundColor: '#f1f'\n  }\n}));\n\nconst BannersToolbar = props => {\n  const { className, ...rest } = props;\n  const [open, setOpen] = React.useState(false);\n  const [alert, setalert] = React.useState(false);\n  const [title, settitle] = React.useState('');\n  const [subtitle, setsubtitle] = React.useState('');\n  const [desc, setdesc] = React.useState('');\n  const [link, setlink] = React.useState('');\n  const [files, setFiles] = useState([]);\n  const dispatch = useDispatch();\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: 'image/*',\n    onDrop: acceptedFiles => {\n      setFiles(\n        acceptedFiles.map(file =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file)\n          })\n        )\n      );\n    }\n  });\n\n  const thumbs = files.map(file => (\n    <div\n      key={file.name}\n      style={thumb}\n    >\n      <div style={thumbInner}>\n        <img\n          src={file.preview}\n          style={img}\n        />\n      </div>\n    </div>\n  ));\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach(file => URL.revokeObjectURL(file.preview));\n    },\n    [files]\n  );\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setFiles([]);\n    setalert(false);\n  };\n\n  const handleDeleteFoto = () => {};\n\n  const handleAddBanner = () => {\n    console.log(\"Banner ->\", files)\n    console.log(\"Title ->\", title)\n    console.log(\"Sub Title ->\",subtitle)\n    console.log(\"Desc ->\", desc)\n    console.log(\"Link ->\",link)\n    // if (video_url !== '' && video_title !== '') {\n    //   const URL = video_url;\n    //   const title = video_title;\n    //   api\n    //     .post('videos', {\n    //       URL,\n    //       title\n    //     })\n    //     .then(response => {\n    //       handleClose();\n    //       setvideo_url('');\n    //       setvideo_title('');\n    //       setalert(false);\n\n    //       const list = 'new';\n    //       dispatch(getVideos(list));\n    //     });\n    // } else {\n    //   setalert(true);\n    // }\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.row}>\n        <span className={classes.spacer} />\n\n        <Button\n          color=\"secondary\"\n          onClick={handleClickOpen}\n          variant=\"contained\"\n        >\n          ADD BANNER\n        </Button>\n      </div>\n      <Dialog\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth\n        maxWidth=\"md\"\n        onClose={handleClose}\n        open={open}\n      >\n        {alert && (\n          <Alert severity=\"error\">\n            Todos os campos precisam estar preenchidos!\n          </Alert>\n        )}\n\n        <DialogTitle id=\"form-dialog-title\">Adicionar Banner</DialogTitle>\n        <DialogContent>\n          <Grid\n            container\n            // m={3}\n            spacing={4}\n          >\n            <Grid\n              item\n              lg={12}\n              md={6}\n              xl={6}\n              xs={6}\n            >\n              <DialogContentText>\n                Adicione um novo Banner no app, ele ficara localizado na tela\n                principal do App.\n              </DialogContentText>\n              <TextField\n                autoFocus\n                fullWidth\n                id=\"Title\"\n                label=\"Titulo*\"\n                margin=\"dense\"\n                onChange={event => settitle(event.target.value)}\n                type=\"text\"\n                value={title}\n              />\n              <TextField\n                fullWidth\n                id=\"SubTitle\"\n                label=\"Sub Titulo\"\n                margin=\"dense\"\n                onChange={event => setsubtitle(event.target.value)}\n                type=\"text\"\n                value={subtitle}\n              />\n              <TextField\n                fullWidth\n                id=\"Desc\"\n                label=\"Descrição\"\n                margin=\"dense\"\n                onChange={event => setdesc(event.target.value)}\n                type=\"text\"\n                value={desc}\n              />\n              <TextField\n                fullWidth\n                id=\"link\"\n                label=\"Link da promo\"\n                margin=\"dense\"\n                onChange={event => setlink(event.target.value)}\n                type=\"text\"\n                value={link}\n              />\n            </Grid>\n            <Grid\n              item\n              lg={12}\n              md={6}\n              xl={6}\n              xs={6}\n            >\n              <DialogContentText>Prévia</DialogContentText>\n              <Paper className={classes.paper}>\n                <section className=\"container\">\n                  <div {...getRootProps({ className: 'dropzone' })}>\n                    <input {...getInputProps()} />\n                    <Paper className={classes.paper}>\n                      <p align=\"center\">\n                        Arraste aqui o Banner ou clique para escolher um!\n                      </p>\n                    </Paper>\n                  </div>\n                  <aside style={thumbsContainer}>{thumbs}</aside>\n                </section>\n              </Paper>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            onClick={handleClose}\n          >\n            Cancelar\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={handleAddBanner}\n          >\n            Adicionar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nBannersToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default BannersToolbar;\n"]},"metadata":{},"sourceType":"module"}